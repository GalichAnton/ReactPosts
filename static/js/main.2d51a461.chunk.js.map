{"version":3,"sources":["components/UI/MyModal/MyModal.module.css","components/UI/button/MyButton.module.css","components/UI/input/MyInput.module.css","components/UI/Loader/Loader.module.css","context/index.js","components/UI/button/MyButton.jsx","components/UI/Navbar/NavBar.jsx","pages/About.jsx","API/PostService.js","hooks/usePosts.js","hooks/useFetching.js","utils/pages.js","components/UI/input/MyInput.jsx","components/PostForm.jsx","components/UI/MyModal/MyModal.jsx","components/UI/select/MySelect.jsx","components/PostFilter.jsx","components/PostItem.jsx","components/PostList.jsx","components/UI/Loader/Loader.jsx","components/UI/pagination/Pagination.jsx","pages/Posts.jsx","hooks/useObserver.js","pages/PostidPage.jsx","router/index.js","pages/Login.jsx","components/AppRouter.jsx","App.js","index.js"],"names":["module","exports","AuthContext","createContext","MyButton","children","props","className","classes","myBtn","Navbar","useContext","setIsAuth","isAuth","onClick","localStorage","removeItem","to","About","PostService","limit","page","axios","get","params","_limit","_page","response","id","usePosts","posts","sort","query","sortedPosts","useMemo","a","b","localeCompare","useSortedPosts","filter","post","title","toLowerCase","includes","useFetching","callback","useState","isLoading","setIsLoading","error","setError","fetching","message","getPageCount","totalCount","Math","ceil","MyInput","React","forwardRef","ref","myInput","PostForm","create","body","setPost","value","onChange","e","target","type","placeholder","preventDefault","newPost","Date","now","MyModal","visible","setVisible","rootClasses","cl","myModal","push","active","join","myModalContent","stopPropagation","MySelect","options","defaultValue","event","disabled","map","option","name","PostFilter","setFilter","selectedSort","PostItem","router","useHistory","remove","PostList","length","style","textAlign","TransitionGroup","index","CSSTransition","timeout","classNames","number","Loader","loader","Pagination","totalPages","changePage","pagesArray","result","i","getPagesArray","p","Posts","setPosts","modal","setModal","setTotalPages","setLimit","setPage","sortedAndSearchedPosts","lastElement","useRef","getAll","data","headers","fetchPosts","isPostsLoading","postError","canLoad","observer","useEffect","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","useObserver","marginTop","margin","height","background","display","justifyContent","PostIdPage","useParams","comments","setComments","getById","fetchPostById","getCommentsByPostId","fetchComments","isComLoading","comm","email","privateRoutes","path","component","exact","publicRoutes","onSubmit","setItem","AppRouter","route","App","setLoadng","getItem","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d51a461.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myModal\":\"MyModal_myModal__1fVXP\",\"myModalContent\":\"MyModal_myModalContent__2Ya7O\",\"active\":\"MyModal_active__1AF5z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myBtn\":\"MyButton_myBtn__2x9EM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myInput\":\"MyInput_myInput__32WSH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3xwKA\",\"rotate\":\"Loader_rotate__3eEkD\"};","import {createContext} from 'react'\r\n\r\nexport const AuthContext = createContext(null);","import React from 'react';\r\nimport classes from './MyButton.module.css';\r\n\r\nconst MyButton = ({children, ...props}) => {\r\n    return (\r\n        <button {...props} className={classes.myBtn}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default MyButton;","import React, { useContext } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from '../../../context';\r\nimport MyButton from \"../button/MyButton\";\r\n\r\n\r\nconst Navbar = () => {\r\n  const {isAuth, setIsAuth} = useContext(AuthContext)\r\n  const logout = () => {\r\n    setIsAuth(false)\r\n    localStorage.removeItem('auth')\r\n  }\r\n  return (\r\n    <div className=\"navbar\">\r\n      <MyButton onClick={logout}>\r\n        Выйти\r\n      </MyButton>\r\n      <div className=\"navbar__links\">\r\n        <Link to=\"/about\">О сайте</Link>\r\n        <Link to=\"/posts\">Посты</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <h1>\r\n      About React App\r\n    </h1>\r\n  );\r\n};\r\n\r\nexport default About;","import axios from \"axios\";\r\n\r\nexport default class PostService {\r\n  static async getAll(limit = 10, page = 1) {\r\n\r\n    const response = await axios.get('https://jsonplaceholder.typicode.com/posts',\r\n      {\r\n        params: {\r\n          _limit: limit,\r\n          _page: page,\r\n        }\r\n      })\r\n    return response\r\n\r\n  }\r\n\r\n  static async getById(id) {\r\n    const response = await axios.get('https://jsonplaceholder.typicode.com/posts/' + id)\r\n    return response\r\n  }\r\n\r\n  static async getCommentsByPostId(id) {\r\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/posts/${id}/comments`)\r\n    return response;\r\n  }\r\n}","import { useMemo } from \"react\";\r\n\r\nexport const useSortedPosts = (posts, sort) => {\r\n  const sortedPosts = useMemo(() => {\r\n    if (sort) {\r\n      return [...posts].sort((a, b) => a[sort].localeCompare(b[sort]))\r\n    }\r\n    return posts;\r\n  }, [posts, sort])\r\n\r\n  return sortedPosts;\r\n}\r\n\r\nexport const usePosts = (posts, sort, query) => {\r\n  const sortedPosts = useSortedPosts(posts, sort);\r\n\r\n  const sortedAndSearchedPosts = useMemo(() => {\r\n    return sortedPosts.filter(post => post.title.toLowerCase().includes(query.toLowerCase()))\r\n  }, [query, sortedPosts])\r\n\r\n  return sortedAndSearchedPosts;\r\n}","import { useState } from \"react\";\r\n\r\nexport const useFetching = (callback) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const fetching = async (...args) => {\r\n    try {\r\n      setIsLoading(true)\r\n      await callback(...args)\r\n    } catch (e) {\r\n      setError(e.message);\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return [fetching, isLoading, error]\r\n}","export const getPageCount = (totalCount, limit) => {\r\n  return Math.ceil(totalCount / limit)\r\n}\r\n\r\nexport const getPagesArray = (totalPages) => {\r\n  let result = [];\r\n  for (let i = 0; i < totalPages; i++) {\r\n    result.push(i + 1)\r\n  }\r\n  return result;\r\n}","import React from 'react';\r\nimport classes from './MyInput.module.css';\r\n\r\nconst MyInput = React.forwardRef((props, ref) => {\r\n    return (\r\n        <input ref={ref} className={classes.myInput} {...props}/>\r\n    );\r\n});\r\n\r\nexport default MyInput;","import React, { useState } from 'react';\r\nimport MyInput from \"./UI/input/MyInput\";\r\nimport MyButton from \"./UI/button/MyButton\";\r\n\r\nconst PostForm = ({ create }) => {\r\n  const [post, setPost] = useState({ title: '', body: '' })\r\n\r\n\r\n  const addNewPost = (e) => {\r\n    e.preventDefault()\r\n    if (post.title !== \"\" && post.body !== \"\") {\r\n      const newPost = {\r\n        ...post, id: Date.now()\r\n      }\r\n      create(newPost)\r\n      setPost({ title: '', body: '' })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <MyInput\r\n        value={post.title}\r\n        onChange={e => setPost({ ...post, title: e.target.value })}\r\n        type=\"text\"\r\n        placeholder=\"Название поста\"\r\n      />\r\n      <MyInput\r\n        value={post.body}\r\n        onChange={e => setPost({ ...post, body: e.target.value })}\r\n        type=\"text\"\r\n        placeholder=\"Описание поста\"\r\n      />\r\n      <MyButton onClick={addNewPost}>Создать пост</MyButton>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PostForm;","import React from 'react';\r\nimport cl from './MyModal.module.css';\r\n\r\nconst MyModal = ({ children, visible, setVisible }) => {\r\n\r\n  const rootClasses = [cl.myModal]\r\n\r\n  if (visible) {\r\n    rootClasses.push(cl.active);\r\n  }\r\n\r\n  return (\r\n    <div className={rootClasses.join(' ')} onClick={() => setVisible(false)}>\r\n      <div className={cl.myModalContent} onClick={(e) => e.stopPropagation()}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyModal;","\r\nimport React from 'react';\r\n\r\nconst MySelect = ({ options, defaultValue, value, onChange }) => {\r\n  return (\r\n    <select\r\n      value={value}\r\n      onChange={event => onChange(event.target.value)}\r\n    >\r\n      <option disabled value=\"\">{defaultValue}</option>\r\n      {options.map(option =>\r\n        <option key={option.value} value={option.value}>\r\n          {option.name}\r\n        </option>\r\n      )}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default MySelect;","\r\nimport React from 'react';\r\nimport MyInput from \"./UI/input/MyInput\";\r\nimport MySelect from \"./UI/select/MySelect\";\r\n\r\nconst PostFilter = ({ filter, setFilter }) => {\r\n  return (\r\n    <div>\r\n      <MyInput\r\n        value={filter.query}\r\n        onChange={e => setFilter({ ...filter, query: e.target.value })}\r\n        placeholder=\"Поиск...\"\r\n      />\r\n      <MySelect\r\n        value={filter.sort}\r\n        onChange={selectedSort => setFilter({ ...filter, sort: selectedSort })}\r\n        defaultValue=\"Сортировка\"\r\n        options={[\r\n          { value: 'title', name: 'По названию' },\r\n          { value: 'body', name: 'По описанию' },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostFilter;","import React from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport MyButton from './UI/button/MyButton'\r\n\r\nconst PostItem = (props) => {\r\n  const router = useHistory()\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"post__content\">\r\n        <strong>{props.post.id}. {props.post.title}</strong>\r\n        <div>\r\n          {props.post.body}\r\n        </div>\r\n      </div>\r\n      <div className=\"post__btns\">\r\n        <MyButton onClick={() => router.push(`/posts/${props.post.id}`)}>Open</MyButton>\r\n        <MyButton onClick={() => props.remove(props.post)}>Delete</MyButton>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostItem\r\n","import React from 'react'\r\nimport PostItem from './PostItem'\r\nimport {\r\n  CSSTransition,\r\n  TransitionGroup,\r\n} from 'react-transition-group'\r\n\r\nconst PostList = ({ posts, title, remove }) => {\r\n  if (!posts.length) {\r\n    return (\r\n      <h1 style={{ textAlign: 'center' }}>\r\n        Posts not found\r\n      </h1>\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\" }}>{title}</h1>\r\n      <TransitionGroup>\r\n        {posts.map((post, index) =>\r\n          <CSSTransition\r\n            key={posts.id}\r\n            timeout={500}\r\n            classNames=\"post\">\r\n            <PostItem remove={remove} number={index + 1} post={post} />\r\n          </CSSTransition>\r\n        )}\r\n      </TransitionGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostList\r\n","import React from 'react';\r\nimport cl from './Loader.module.css';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className={cl.loader}>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\nimport { getPagesArray } from \"../../../utils/pages\";\r\n\r\nconst Pagination = ({ totalPages, page, changePage }) => {\r\n  let pagesArray = getPagesArray(totalPages);\r\n  return (\r\n    <div className=\"page__wrapper\">\r\n      {pagesArray.map(p =>\r\n        <span\r\n          onClick={() => changePage(p)}\r\n          key={p}\r\n          className={page === p ? 'page page__current' : 'page'}\r\n        >\r\n          {p}\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React, { useEffect, useRef, useState } from 'react';\r\nimport PostService from \"../API/PostService\";\r\nimport { usePosts } from \"../hooks/usePosts\";\r\nimport { useFetching } from \"../hooks/useFetching\";\r\nimport { getPageCount } from \"../utils/pages\";\r\nimport MyButton from \"../components/UI/button/MyButton\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport MyModal from \"../components/UI/MyModal/MyModal\";\r\nimport PostFilter from \"../components/PostFilter\";\r\nimport PostList from \"../components/PostList\";\r\nimport Loader from \"../components/UI/Loader/Loader\";\r\nimport Pagination from \"../components/UI/pagination/Pagination\";\r\nimport MySelect from \"../components/UI/select/MySelect\";\r\nimport { useObserver } from '../hooks/useObserver';\r\n\r\n\r\nfunction Posts() {\r\n  const [posts, setPosts] = useState([])\r\n  const [filter, setFilter] = useState({ sort: '', query: '' })\r\n  const [modal, setModal] = useState(false);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\r\n  const lastElement = useRef()\r\n\r\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async (limit, page) => {\r\n    const response = await PostService.getAll(limit, page);\r\n    setPosts([...posts, ...response.data])\r\n    const totalCount = response.headers['x-total-count']\r\n    setTotalPages(getPageCount(totalCount, limit));\r\n  })\r\n\r\n  useObserver(lastElement, page < totalPages, isPostsLoading, () => {\r\n    setPage(page + 1);\r\n  })\r\n\r\n  useEffect(() => {\r\n    fetchPosts(page, limit)\r\n  }, [page, limit])\r\n\r\n  const createPost = (newPost) => {\r\n    setPosts([...posts, newPost])\r\n    setModal(false)\r\n  }\r\n\r\n  // Получаем post из дочернего компонента\r\n  const removePost = (post) => {\r\n    setPosts(posts.filter(p => p.id !== post.id))\r\n  }\r\n\r\n  const changePage = (page) => {\r\n    setPage(page)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <MyButton style={{ marginTop: 30 }} onClick={() => setModal(true)}>\r\n        Создать пользователя\r\n      </MyButton>\r\n      <MyModal visible={modal} setVisible={setModal}>\r\n        <PostForm create={createPost} />\r\n      </MyModal>\r\n      <hr style={{ margin: '15px 0' }} />\r\n      <PostFilter\r\n        filter={filter}\r\n        setFilter={setFilter}\r\n      />\r\n      <MySelect\r\n        value={limit}\r\n        onChange={value => setLimit(value)}\r\n        defaultValue=\"Кол-во элементов на странице\"\r\n        options={[\r\n          { value: 5, name: '5' },\r\n          { value: 10, name: '10' },\r\n          { value: 25, name: '25' },\r\n          { value: -1, name: 'Показать все' },\r\n        ]}\r\n      />\r\n      {postError &&\r\n        <h1>Произошла ошибка ${postError}</h1>\r\n      }\r\n      <PostList remove={removePost} posts={sortedAndSearchedPosts} title=\"Посты про JS\" />\r\n      <div ref={lastElement} style={{ height: 20, background: 'red' }} />\r\n      {isPostsLoading &&\r\n        <div style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}><Loader /></div>\r\n      }\r\n      <Pagination\r\n        page={page}\r\n        changePage={changePage}\r\n        totalPages={totalPages}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Posts;","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useObserver = (ref, canLoad, isLoading, callback) => {\r\n  const observer = useRef();\r\n\r\n  useEffect(() => {\r\n    if (isLoading) return;\r\n    if (observer.current) observer.current.disconnect();\r\n\r\n    var cb = function (entries, observer) {\r\n      if (entries[0].isIntersecting && canLoad) {\r\n        callback()\r\n      }\r\n    };\r\n    observer.current = new IntersectionObserver(cb);\r\n    observer.current.observe(ref.current)\r\n  }, [isLoading])\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useFetching } from \"../hooks/useFetching\";\r\nimport PostService from \"../API/PostService\";\r\nimport Loader from \"../components/UI/Loader/Loader\";\r\n\r\nconst PostIdPage = () => {\r\n  const params = useParams()\r\n  const [post, setPost] = useState({})\r\n  const [comments, setComments] = useState([])\r\n  const [fetchPostById, isLoading, error] = useFetching(async (id) => {\r\n    const response = await PostService.getById(id)\r\n    setPost(response.data)\r\n  })\r\n  const [fetchComments, isComLoading, comError] = useFetching(async (id) => {\r\n    const response = await PostService.getCommentsByPostId(id)\r\n    setComments(response.data)\r\n  })\r\n  useEffect(() => {\r\n    fetchPostById(params.id)\r\n    fetchComments(params.id)\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <h1>Вы открыли страницу поста c ID = {params.id}</h1>\r\n      {isLoading\r\n        ? <Loader />\r\n        : <div>{post.id}.  {post.title}</div>\r\n      }\r\n      <h1>Comments</h1>\r\n      {isComLoading\r\n        ? <Loader />\r\n        : <div>\r\n          {comments.map(comm => \r\n            <div key={comm.id} style={{marginTop:'20px'}}>\r\n              <h3>{comm.email}</h3>\r\n              <p>{comm.body}</p>\r\n              </div>\r\n          )}\r\n        </div>\r\n\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostIdPage;","import About from \"../pages/About\";\r\nimport Posts from \"../pages/Posts\";\r\nimport PostIdPage from \"../pages/PostidPage\";\r\nimport Login from \"../pages/Login\";\r\n\r\n\r\n\r\nexport const privateRoutes = [\r\n  { path: '/about', component: About, exact: true },\r\n  { path: '/posts', component: Posts, exact: true },\r\n  { path: '/posts/:id', component: PostIdPage, exact: true },\r\n]\r\n\r\nexport const publicRoutes = [\r\n    {path: '/login', component: Login, exact: true},\r\n]","import React, { useContext } from 'react';\r\nimport MyInput from \"../components/UI/input/MyInput\";\r\nimport MyButton from \"../components/UI/button/MyButton\";\r\nimport { AuthContext } from \"../context\";\r\n\r\nconst Login = () => {\r\n  const { isAuth, setIsAuth } = useContext(AuthContext);\r\n\r\n  const login = event => {\r\n    event.preventDefault();\r\n    setIsAuth(true);\r\n    localStorage.setItem('auth', 'true')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Страница для логина</h1>\r\n      <form onSubmit={login}>\r\n        <MyInput type=\"text\" placeholder=\"Введите логин\" />\r\n        <MyInput type=\"password\" placeholder=\"Введите пароль\" />\r\n        <MyButton>Войти</MyButton>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","import React, { useContext } from 'react';\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { AuthContext } from '../context/index';\r\nimport { privateRoutes, publicRoutes } from '../router';\r\nimport Loader from './UI/Loader/Loader';\r\n\r\n\r\nconst AppRouter = () => {\r\n  const {isAuth, setIsAuth, isLoading} = useContext(AuthContext)\r\n  if(isLoading){\r\n    return <Loader/>\r\n  }\r\n  return (\r\n    isAuth \r\n    ? <Switch>\r\n    {privateRoutes.map(route =>\r\n      <Route\r\n        component={route.component}\r\n        path={route.path}\r\n        exact={route.exact}\r\n        key={route.path}\r\n      />\r\n    )}\r\n    <Redirect to=\"/posts\" />\r\n  </Switch>\r\n    : <Switch>\r\n    {publicRoutes.map(route =>\r\n      <Route\r\n        component={route.component}\r\n        path={route.path}\r\n        exact={route.exact}\r\n        key={route.path}\r\n      />\r\n    )}\r\n    <Redirect to=\"/login\" />\r\n  </Switch>\r\n    \r\n\r\n  );\r\n};\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport \"./styles/App.css\"\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\"\nimport Navbar from \"./components/UI/Navbar/NavBar\";\nimport AppRouter from \"./components/AppRouter\";\nimport { AuthContext } from \"./context/index\";\nfunction App() {\n  const [isAuth, setIsAuth] = useState(false) \n  const [isLoading, setLoadng] = useState(true)\n  useEffect(() => {\n    if(localStorage.getItem('auth')){\n      setIsAuth(true)\n    }\n    setLoadng(false)\n  }, [])\n  return (\n    \n    <AuthContext.Provider value={{\n      isAuth,\n      setIsAuth,\n      isLoading\n    }}>\n      <BrowserRouter>\n        <Navbar />\n        <AppRouter />\n      </BrowserRouter>\n    </AuthContext.Provider>\n\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}